<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">

    <ext:property-placeholder placeholder-prefix="$[" placeholder-suffix="]"/>

    <!--<reference id="homePageProviderService" interface="com.daren.example.web.api.provider.IHomePageProvider"/>-->

    <!-- <bean id="irisShiroApplication" class="com.daren.example.web.bootup.wicket.IrisShiroApplication">
         &lt;!&ndash;<property name="homePageProvider" value=""/>&ndash;&gt;
         &lt;!&ndash;<property name="homePageProvider" ref="homePageProviderService"/>&ndash;&gt;
     </bean>-->
    <!--<service interface="javax.servlet.http.HttpServlet" ref="Atmospherefilter">
        <service-properties>
            <entry key="alias" value="/*"/>
            <entry key="init.timeout" value="15000"/>
            <entry key="init.multi-timeout" value="1500"/>
            <entry key="init.verbose" value="false"/>
            <entry key="init.transports" value="org.cometd.websocket.server.WebSocketTransport"/>
        </service-properties>
    </service>
    &lt;!&ndash;<bean id="cometdServlet" class="org.cometd.server.CometdServlet"/>&ndash;&gt;
    <bean id="Atmospherefilter" class="org.atmosphere.cpr.AtmosphereServlet"/>
-->
    <service interface="org.ops4j.pax.wicket.api.WebApplicationFactory">
        <service-properties>
            <entry key="pax.wicket.applicationname" value="daren.project.example"/>
            <entry key="pax.wicket.mountpoint" value="/example"/>
        </service-properties>
        <bean class="com.daren.example.web.bootup.wicket.filter.ShiroWebApplicationFactory">
            <property name="wicketApplication" value="com.daren.example.web.bootup.wicket.IrisShiroApplication"/>
        </bean>
    </service>



    <bean id="shiroRealm" class="com.daren.core.web.bootup.wicket.ShiroRealm">
        <!--<property name="casServerUrlPrefix" value="http//localhost:8080/cas"/>
        <property name="casService" value="https://localhost:9191/example"/>-->
    </bean>

    <bean id="webSecurityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"
          destroy-method="destroy">
        <property name="realm" ref="shiroRealm"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
        <!--<property name="sessionMode" value="native"/>-->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!--<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="interval" value="1800000"/>
    </bean>-->

    <!-- 发布session工厂 -->

    <bean id="SessionFactory" class="com.daren.example.web.bootup.wicket.shiro.ShiroSessionFactory">

    </bean>


    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1200000"/>
        <property name="sessionDAO" ref="customShiroSessionDAO"/>
        <property name="sessionFactory" ref="SessionFactory"/>
        <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>-->
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- <property name="maxActive" value="1024" />
         <property name="maxIdle" value="200" />
         <property name="maxWait" value="1000" />
         <property name="testOnBorrow" value="true" />-->
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.JedisPool">
        <argument index="0" ref="jedisPoolConfig"/>
        <argument index="1" value="127.0.0.1"/>
        <argument index="2" value="6379" type="int"/>
    </bean>

    <bean id="jedisShiroSessionRepository" class="com.daren.example.web.bootup.wicket.shiro.JedisShiroSessionRepository">
        <property name="jedisPool" ref="shardedJedisPool"/>
    </bean>

    <service ref="jedisShiroSessionRepository"
             interface="com.daren.example.web.bootup.wicket.shiro.ShiroSessionRepository">

    </service>

    <bean id="customShiroSessionDAO" class="com.daren.example.web.bootup.wicket.shiro.CustomShiroSessionDAO">
        <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
    </bean>

    <!-- 用户授权信息Cache, 采用EhCache -->
    <!--<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        &lt;!&ndash;<property name="cacheManager" ref="cacheManager"/>&ndash;&gt;
        <property name="cacheManagerConfigFile" value="$[karaf.base]/etc/ehcache-example.xml"/>
    </bean>-->

    <bean id="shiroCacheManager" class="com.daren.example.web.bootup.wicket.shiro.ShiroCacheManager">
        <property name="cacheManager" ref="cacheManager"/>
        <!--<property name="cacheManagerConfigFile" value="$[karaf.base]/etc/ehcache.xml"/>-->
    </bean>

    <reference id="cacheManager" interface="com.daren.core.api.cache.ICacheManager"/>


    <service interface="org.ops4j.pax.wicket.api.FilterFactory">
        <service-properties>
            <entry key="pax.wicket.applicationname" value="daren.project.example"/>
            <entry key="pax.wicket.filter.priority" value="2"/>
        </service-properties>
        <bean class="com.daren.example.web.bootup.wicket.filter.ShiroFilterFactory">
            <property name="webSecurityManager" ref="webSecurityManager"/>
        </bean>
    </service>

    <!--<service interface="org.ops4j.pax.wicket.api.FilterFactory">
        <service-properties>
            <entry key="pax.wicket.applicationname" value="daren.project.example"/>
            <entry key="pax.wicket.filter.priority" value="1"/>
        </service-properties>
        <bean class="com.daren.example.web.bootup.wicket.filter.AtmoFilterFactory">
            &lt;!&ndash;<property name="webSecurityManager" ref="webSecurityManager"/>&ndash;&gt;
        </bean>
    </service>-->
</blueprint>
